mutation CreateAccount($email: String!, $password: String!) {
    createAccount(data: { email: $email, password: $password }) {
        id
    }
}

mutation CreateCart {
    createCart(data: {}) {
        id
    }
}

mutation ConnectAccountWithCartAndPublish($accountId: ID!, $cartId: ID!) {
    updateAccount(where: { id: $accountId }, data: { cart: { connect: { id: $cartId } } }) {
        id
    }
    publishAccount(to: PUBLISHED, where: { id: $accountId }) {
        id
    }
    publishCart(to: PUBLISHED, where: { id: $cartId }) {
        id
    }
}

query GetAccountByEmail($email: String!) {
    account(where: { email: $email }, stage: DRAFT) {
        id
        email
        password
    }
}

query GetCartIdByAccountId($id: ID!) {
    account(where: { id: $id }) {
        cart {
            id
        }
    }
}

query GetProductsList {
    products {
        id
        slug
        name
        price
        images(first: 1) {
            url
            width
            height
            id
        }
    }
}

fragment cartContentQuery on Cart {
    id
    cartItems {
        id
        quantity
        product {
            id
            name
            price
            images {
                url
            }
            slug
        }
    }
}

query GetCartItemsByCartId($id: ID!) {
    cart(where: { id: $id }, stage: DRAFT) {
        ...cartContentQuery
    }
}

mutation AddItemToCartByCartId($cartId: ID!, $productId: ID!) {
    updateCart(
        where: { id: $cartId }
        data: { cartItems: { create: { quantity: 1, product: { connect: { id: $productId } } } } }
    ) {
        ...cartContentQuery
    }
}

mutation RemoveItemFromCartByCartId($cartId: ID!, $itemId: ID!) {
    updateCart(where: { id: $cartId }, data: { cartItems: { delete: { id: $itemId } } }) {
        ...cartContentQuery
    }
}

mutation UpdateItemQuantityByCartId($cartId: ID!, $itemId: ID!, $quantity: Int!) {
    updateCart(
        where: { id: $cartId }
        data: { cartItems: { update: { where: { id: $itemId }, data: { quantity: $quantity } } } }
    ) {
        ...cartContentQuery
    }
}

mutation ClearCartItems($cartId: ID!) {
    updateCart(where: { id: $cartId }, data: { cartItems: { set: [] } }) {
        ...cartContentQuery
    }
}

query GetProductsSlugs {
    products {
        slug
    }
}

query GetProductDetailsBySlug($slug: String) {
    product(where: { slug: $slug }) {
        id
        slug
        name
        price
        description
        images {
            url
        }
        variants {
            ... on ProductSizeColorVariant {
                id
                name
            }
            ... on ProductColorVariant {
                id
                name
            }
            ... on ProductSizeVariant {
                id
                name
            }
        }
    }
}
